@model List<Teacher>
@{
    ViewData["Title"] = "Quản lý giáo viên";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1><i class="fas fa-chalkboard-teacher"></i> Quản lý giáo viên</h1>
    <div>
        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addTeacherModal">
            <i class="fas fa-plus"></i> Thêm giáo viên
        </button>
        <a asp-action="Dashboard" class="btn btn-outline-secondary">
            <i class="fas fa-arrow-left"></i> Về Dashboard
        </a>
    </div>
</div>

<!-- Teachers Grid -->
@if (Model != null && Model.Any())
{
    <div class="row" id="teachersGrid">
        @foreach (var teacher in Model)
        {
            <div class="col-lg-4 col-md-6 mb-4" data-teacher-id="@teacher.TeacherId">
                <div class="card h-100">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-start mb-3">
                            <h5 class="card-title">@teacher.FullName</h5>
                            @if (teacher.IsActive)
                            {
                                <span class="badge bg-success">Hoạt động</span>
                            }
                            else
                            {
                                <span class="badge bg-secondary">Không hoạt động</span>
                            }
                        </div>

                        @if (!string.IsNullOrEmpty(teacher.Specialization))
                        {
                            <p class="text-primary mb-2">
                                <i class="fas fa-graduation-cap"></i> @teacher.Specialization
                            </p>
                        }

                        <div class="teacher-info mb-3">
                            @if (!string.IsNullOrEmpty(teacher.Email))
                            {
                                <div class="d-flex align-items-center mb-1">
                                    <i class="fas fa-envelope text-muted me-2"></i>
                                    <small><a href="mailto:@teacher.Email">@teacher.Email</a></small>
                                </div>
                            }
                            @if (!string.IsNullOrEmpty(teacher.PhoneNumber))
                            {
                                <div class="d-flex align-items-center mb-1">
                                    <i class="fas fa-phone text-muted me-2"></i>
                                    <small>@teacher.PhoneNumber</small>
                                </div>
                            }
                            <div class="d-flex align-items-center mb-1">
                                <i class="fas fa-calendar text-muted me-2"></i>
                                <small>@teacher.Experience năm kinh nghiệm</small>
                            </div>
                            <div class="d-flex align-items-center">
                                <i class="fas fa-calendar-plus text-muted me-2"></i>
                                <small>Tham gia: @teacher.CreatedAt.ToString("dd/MM/yyyy")</small>
                            </div>
                        </div>

                        @if (!string.IsNullOrEmpty(teacher.Bio))
                        {
                            <p class="card-text text-muted">
                                @(teacher.Bio.Length > 100 ? teacher.Bio.Substring(0, 100) + "..." : teacher.Bio)
                            </p>
                        }

                        <div class="mt-auto">
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <small class="text-muted">
                                    <i class="fas fa-calendar-alt"></i>
                                    @teacher.Activities.Count hoạt động
                                </small>
                            </div>
                            
                            <div class="btn-group w-100" role="group">
                                <button class="btn btn-outline-primary btn-sm" title="Xem chi tiết">
                                    <i class="fas fa-eye"></i> Xem
                                </button>
                                <button class="btn btn-outline-warning btn-sm" title="Chỉnh sửa">
                                    <i class="fas fa-edit"></i> Sửa
                                </button>
                                <button class="btn btn-outline-danger btn-sm" title="Xóa"
                                        onclick="deleteTeacher('@teacher.TeacherId')">
                                    <i class="fas fa-trash"></i> Xóa
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <div class="text-center py-5">
        <i class="fas fa-chalkboard-teacher fa-5x text-muted mb-4"></i>
        <h3 class="text-muted">Chưa có giáo viên nào</h3>
        <p class="text-muted">Hãy thêm giáo viên đầu tiên cho hệ thống.</p>
        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addTeacherModal">
            <i class="fas fa-plus"></i> Thêm giáo viên
        </button>
    </div>
}

<!-- Add Teacher Modal -->
<div class="modal fade" id="addTeacherModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Thêm giáo viên mới</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="addTeacherForm" asp-action="AddTeacher" asp-controller="Admin" method="post">
                    @Html.AntiForgeryToken()
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label" for="FullName">Họ tên *</label>
                            <input type="text" class="form-control" id="FullName" name="FullName" required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label" for="Email">Email</label>
                            <input type="email" class="form-control" id="Email" name="Email">
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label" for="PhoneNumber">Số điện thoại</label>
                            <input type="tel" class="form-control" id="PhoneNumber" name="PhoneNumber">
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label" for="Specialization">Chuyên môn</label>
                            <input type="text" class="form-control" id="Specialization" name="Specialization">
                        </div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label" for="Experience">Kinh nghiệm (năm)</label>
                        <input type="number" class="form-control" id="Experience" name="Experience" min="0" max="50" value="0">
                    </div>
                    <div class="mb-3">
                        <label class="form-label" for="Bio">Tiểu sử</label>
                        <textarea class="form-control" id="Bio" name="Bio" rows="3"></textarea>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                        <button type="submit" class="btn btn-primary">Thêm giáo viên</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        function deleteTeacher(teacherId) {
            if (confirm('Bạn có chắc muốn xóa giáo viên này?')) {
                fetch('/Admin/DeleteTeacher', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify({ id: teacherId })
                })
                .then(response => {
                    if (response.ok) {
                        const teacherCard = document.querySelector(`[data-teacher-id="${teacherId}"]`);
                        if (teacherCard) {
                            teacherCard.remove();
                            // Kiểm tra nếu không còn giáo viên nào, hiển thị thông báo "Chưa có giáo viên nào"
                            const teachersGrid = document.getElementById('teachersGrid');
                            if (!teachersGrid || teachersGrid.children.length === 0) {
                                teachersGrid.innerHTML = `
                                    <div class="text-center py-5">
                                        <i class="fas fa-chalkboard-teacher fa-5x text-muted mb-4"></i>
                                        <h3 class="text-muted">Chưa có giáo viên nào</h3>
                                        <p class="text-muted">Hãy thêm giáo viên đầu tiên cho hệ thống.</p>
                                        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addTeacherModal">
                                            <i class="fas fa-plus"></i> Thêm giáo viên
                                        </button>
                                    </div>
                                `;
                            }
                        }
                    } else {
                        alert('Có lỗi xảy ra khi xóa giáo viên.');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Có lỗi xảy ra khi xóa giáo viên.');
                });
            }
        }
    </script>
}